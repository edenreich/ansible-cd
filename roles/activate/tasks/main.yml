---

- name: Copy .env.example ===> shared/.env (if not already copied)
  copy:
    remote_src: yes
    src: "{{ projects_root }}/{{ project_name }}/releases/{{ release_folder }}/.env.example"
    dest: "{{ projects_root }}/{{ project_name }}/shared/.env"
    force: no

- name: Use existing .env file
  file:
    state: link
    path: "{{ projects_root }}/{{ project_name }}/releases/{{ release_folder }}/.env"
    src: "{{ projects_root }}/{{ project_name }}/shared/.env"
    force: yes

- name: Delete new release application's sessions folder
  file:
    path: "{{ projects_root }}/{{ project_name }}/releases/{{ release_folder }}/storage/framework/sessions"
    state: absent

- name: Use existing application's sessions
  file:
    state: link
    path: "{{ projects_root }}/{{ project_name }}/releases/{{ release_folder }}/storage/framework/sessions"
    src: "{{ projects_root }}/{{ project_name }}/shared/sessions"
    force: yes

- name: Check if current folder exists
  stat:
    path: "{{ projects_root }}/{{ project_name }}/current"
  register: current_dir

- name: Remove current folder (on first release)
  file:
    state: absent
    path: "{{ projects_root }}/{{ project_name }}/current"
  when: current_dir.stat.isdir is defined and current_dir.stat.isdir

- name: Relink to new release
  file:
    state: link
    path: "{{ projects_root }}/{{ project_name }}/current"
    src: "{{ projects_root }}/{{ project_name }}/releases/{{ release_folder }}"
    force: yes
